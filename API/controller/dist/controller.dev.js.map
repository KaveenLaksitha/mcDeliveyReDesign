{"version":3,"sources":["controller.js"],"names":["router","require","Router","FeedBack","Address","Card","Cart","FoodFav","Register","moment","post","req","res","console","log","body","name","quantity","num","price","calculatedPrice","newCart","save","response","status","send","message","get","find","data","ok","orderId","reviewOn","suggestion","complaint","rate","Number","newFeedBack","userId","deliveryAddress","city","locationType","floor","apartmentNo","landMark","companyName","department","instruct","newAddress","cardType","cardNumber","nameOnCard","expiryDate","ExpiryDate","uri","newCard","route","params","uID","findOneAndDelete","then","err","error","image","newFav","salutation","contactno","dateofbirth","format","email","password","confirmpassword","newRegister","EM","pass","findOne","user","register","module","exports"],"mappings":"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","sourcesContent":["const router = require(\"express\").Router();\r\nconst FeedBack = require(\"../model/feedback\");\r\nconst Address = require(\"../model/address\");\r\nconst Card = require(\"../model/card\");\r\nconst Cart = require(\"../model/cart\")\r\nconst FoodFav = require(\"../model/foodFav\")\r\n\r\nconst Register = require(\"../model/register\")\r\nconst moment = require('moment');\r\n\r\n//kaveen\r\n//to add items to cart\r\nrouter.post(\"/addToCart\", async (req, res) => {\r\n\r\n    console.log(\"data for cart\", req.body)\r\n\r\n    const name = req.body.name;\r\n    const quantity = req.body.num;\r\n    const price = req.body.calculatedPrice;\r\n\r\n    const newCart = new Cart({\r\n        name, quantity, price\r\n    })\r\n\r\n    try {\r\n\r\n        let response = await newCart.save();\r\n        if (response) {\r\n            return res.status(201).send({ status: true, message: \"item added for cart\" })\r\n        } else {\r\n            return res.status(500).send({ status: \"failed to add item record\" })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(\"error\", err)\r\n    }\r\n})\r\n\r\n//to retrieve data from db\r\nrouter.get(\"/cart\", async (req, res) => {\r\n\r\n    try {\r\n        const response = await Cart.find();\r\n        return res.status(200).send({ status: \"Success\", data: response });\r\n    } catch (error) {\r\n        console.log(\"Something went wrong while connecting to DB\");\r\n        return { ok: false };\r\n    }\r\n\r\n});\r\n\r\n\r\n//Hasani\r\n//to add a new feedback\r\n\r\nrouter.post(\"/addAReview\", async (req, res) => {\r\n\r\n    console.log(\"data for feedback\", req.body)\r\n\r\n    const orderId = req.body.orderId;\r\n    const reviewOn = req.body.reviewOn;\r\n    const suggestion = req.body.suggestion;\r\n    const complaint = req.body.complaint;\r\n    const rate = Number(req.body.rate);\r\n\r\n\r\n    const newFeedBack = new FeedBack({\r\n        orderId, reviewOn, suggestion, complaint, rate\r\n    })\r\n\r\n    try {\r\n\r\n        let response = await newFeedBack.save();\r\n        if (response) {\r\n            return res.status(201).send({ status: \"New FeedBack Saved\" })\r\n        } else {\r\n            return res.status(500).send({ status: \"FeedBack could not be saved\" })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(\"error\", err);\r\n        return res.status(500).send({ status: \"FeedBack could not be saved\" })\r\n    }\r\n})\r\n\r\n//to retrieve all feedbacks from db\r\nrouter.get(\"/getReview\", async (req, res) => {\r\n\r\n    try {\r\n        const response = await FeedBack.find();\r\n        return res.status(200).send({ status: \"Success\", data: response });\r\n    } catch (error) {\r\n        console.log(\"Something went wrong while connecting to DB\");\r\n        return { ok: false };\r\n    }\r\n\r\n});\r\n\r\n//to add a new delivery Address\r\n\r\nrouter.post(\"/addAddress\", async (req, res) => {\r\n\r\n    console.log(\"data for address\", req.body)\r\n\r\n    const userId = req.body.userId;\r\n    const deliveryAddress = req.body.deliveryAddress;\r\n    const city = req.body.city;\r\n    const locationType = req.body.locationType;\r\n    const floor = req.body.floor;\r\n    const apartmentNo = req.body.apartmentNo;\r\n    const landMark = req.body.landMark;\r\n    const companyName = req.body.companyName;\r\n    const department = req.body.department;\r\n    const instruct = req.body.instruct;\r\n\r\n\r\n    const newAddress = new Address({\r\n        userId, deliveryAddress, city, locationType, floor, apartmentNo, landMark, companyName, department, instruct\r\n    })\r\n\r\n    try {\r\n\r\n        let response = await newAddress.save();\r\n        if (response) {\r\n            return res.status(201).send({ status: \"New Delivery Address Successfully Saved\" })\r\n        } else {\r\n            return res.status(500).send({ status: \"Delivery Address could not be saved\" })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(\"error\", err)\r\n        return res.status(500).send({ status: \"Delivery Address could not be saved\" });\r\n    }\r\n})\r\n\r\n//to retrieve list of delivery Addresses from db\r\nrouter.get(\"/getAddress\", async (req, res) => {\r\n\r\n    try {\r\n        const response = await Address.find();\r\n        return res.status(200).send({ status: \"Success\", data: response });\r\n    } catch (error) {\r\n        console.log(\"Something went wrong while connecting to DB\");\r\n        return { ok: false };\r\n    }\r\n\r\n});\r\n\r\n//to add a new card\r\n\r\nrouter.post(\"/addACard\", async (req, res) => {\r\n\r\n    console.log(\"data for card\", req.body)\r\n    const userId = req.body.userId;\r\n    const cardType = req.body.cardType;\r\n    const cardNumber = req.body.cardNumber;\r\n    const nameOnCard = req.body.nameOnCard;\r\n    const expiryDate = req.body.ExpiryDate;\r\n    const uri = req.body.uri;\r\n\r\n    const newCard = new Card({\r\n        userId, cardType, cardNumber, nameOnCard, expiryDate, uri\r\n    })\r\n\r\n    try {\r\n\r\n        let response = await newCard.save();\r\n        if (response) {\r\n            return res.status(201).send({ status: \"New Card Saved\" })\r\n        } else {\r\n            return res.status(500).send({ status: \"Card could not be saved\" })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(\"error\", err);\r\n        return res.status(500).send({ status: \"Card could not be saved\" })\r\n\r\n    }\r\n})\r\n\r\n//to retrieve all cards from db\r\nrouter.get(\"/getCards\", async (req, res) => {\r\n\r\n    try {\r\n        const response = await Card.find();\r\n        return res.status(200).send({ status: \"Success\", data: response });\r\n    } catch (error) {\r\n        console.log(\"Something went wrong while connecting to DB\");\r\n        return { ok: false };\r\n    }\r\n\r\n});\r\n\r\n//To delete a card\r\nrouter.route(\"/removeCard/:uID\").delete(async (req, res) => {\r\n\r\n    let userId = req.params.uID;//userId passed from card\r\n\r\n    await Card.findOneAndDelete({ userId: userId })\r\n        .then(() => {\r\n            res.status(200).send({ status: \"Card deleted\" });\r\n        }).catch(() => {\r\n            console.log(err);\r\n            res.status(500).send({ status: \"Error with deleting a card\", error: err.message });\r\n        })\r\n\r\n})\r\n\r\n//Devin\r\n//add food item to favourite list\r\nrouter.post(\"/addToFav\", async (req, res) => {\r\n\r\n    console.log(\"data for Favourite\", req.body)\r\n\r\n    const name = req.body.name;\r\n    const quantity = req.body.num;\r\n    const price = req.body.price;\r\n    const image = req.body.image;\r\n\r\n    const newFav = new FoodFav({\r\n        name, quantity, price, image\r\n    })\r\n\r\n    try {\r\n\r\n        let response = await newFav.save();\r\n        if (response) {\r\n            return res.status(201).send({ status: \"item added for fAVOURITE\" })\r\n        } else {\r\n            return res.status(500).send({ status: \"failed to add item record\" })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(\"error\", err)\r\n    }\r\n})\r\n\r\n//to retrieve data from db\r\nrouter.get(\"/FavList\", async (req, res) => {\r\n\r\n    try {\r\n        const response = await FoodFav.find();\r\n        return res.status(200).send({ status: \"Success\", data: response });\r\n    } catch (error) {\r\n        console.log(\"Something went wrong while connecting to DB\");\r\n        return { ok: false };\r\n    }\r\n\r\n});\r\n\r\n\r\n//Thisara\r\nrouter.post(\"/addRegister\", async (req, res) => {\r\n\r\n\r\n    console.log(\"data for register\", req.body)\r\n\r\n    const salutation = req.body.salutation;\r\n    const name = req.body.name;\r\n    const contactno = Number(req.body.contactno);\r\n    const dateofbirth = moment(req.body.dateofbirth).format('YYYY-MMMM-DD');\r\n    const email = req.body.email;\r\n    const password = req.body.password;\r\n    const confirmpassword = req.body.confirmpassword;\r\n\r\n    const newRegister = new Register({\r\n        salutation, name, contactno, dateofbirth, email, password, confirmpassword\r\n    })\r\n\r\n    try {\r\n        let response = await newRegister.save();\r\n        if (response) {\r\n            return res.status(201).send({ status: true, message: \"Register to the system successfully\" })\r\n        } else {\r\n            return res.status(500).send({ status: \"Try again\" })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(\"error\", err)\r\n        return res.status(500).send({ status: \"User Already Register to MC Delivery App\" })\r\n\r\n    }\r\n})\r\n\r\nrouter.get(\"/getRegister\", async (req, res) => {\r\n\r\n    try {\r\n        const response = await Register.find();\r\n        return res.status(200).send({ status: \"Success\", data: response });\r\n    } catch (error) {\r\n        console.log(\"Something went wrong while connecting to DB\");\r\n        return { ok: false };\r\n    }\r\n\r\n});\r\n\r\nrouter.get(\"/get/:email/:pass\", async (req, res) => {\r\n    let EM = req.params.email;//username taken from the frontend login form\r\n    let pass = req.params.pass;//password taken from the frontend login form\r\n\r\n     const user = await Register.findOne({ email: EM, password: pass })\r\n        .then((user) => {\r\n            console.log(\"dataaaaaaa\", user)\r\n            res.status(200).send({ status: \"User fetched\", register: user })\r\n        }).catch(() => {\r\n            console.log(err.message);\r\n            res.status(500).send({ status: \"Error with get user\", error: err.message });\r\n        })\r\n})\r\n\r\n\r\n\r\nmodule.exports = router;\r\n"],"file":"controller.dev.js"}